<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
		xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

	<changeSet id="007-1" author="gooamoko">
		<comment>
			Добавим порядковый номер в таблицу модулей
		</comment>
		<sql>
			ALTER TABLE modules ADD mod_number int NOT NULL DEFAULT 0;
		</sql>
	</changeSet>
	<changeSet id="007-2" author="gooamoko">
		<comment>
			Добавим порядковый номер в таблицу дисциплин
		</comment>
		<sql>
			ALTER TABLE subjects ADD sub_number int NOT NULL DEFAULT 0;
		</sql>
	</changeSet>
	<changeSet id="007-3" author="gooamoko">
		<comment>
			Добавим таблицу сообщений
		</comment>
		<sql>
			CREATE TABLE messages(
			msg_pcode serial,
			msg_from varchar(255) NOT NULL,
			msg_srcaccount int NULL,
			msg_dstaccount int NOT NULL,
			msg_title varchar(255) NOT NULL,
			msg_text text NOT NULL,
			msg_datetime timestamp NOT NULL DEFAULT now(),
			msg_received boolean NOT NULL DEFAULT false,
			msg_deleted boolean NOT NULL DEFAULT false,
			CONSTRAINT messages_pk PRIMARY KEY(msg_pcode),
			CONSTRAINT messages_accounts_src_fk FOREIGN KEY(msg_srcaccount) REFERENCES accounts(aco_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT messages_accounts_dst_fk FOREIGN KEY(msg_dstaccount) REFERENCES accounts(aco_pcode) ON UPDATE CASCADE ON DELETE CASCADE);
		</sql>
	</changeSet>
	<changeSet id="007-4" author="gooamoko">
		<comment>
			Добавим таблицу тестов
		</comment>
		<sql>
			CREATE TABLE tests(
			tst_pcode serial,
			tst_title varchar(255) NOT NULL,
			tst_author varchar(255) NOT NULL,
			tst_questions int NOT NULL DEFAULT 0,
			tst_timelimit int NOT NULL DEFAULT 0,
			tst_maxtries int NOT NULL DEFAULT 1,
			CONSTRAINT tests_pk PRIMARY KEY(tst_pcode));
		</sql>
	</changeSet>
	<changeSet id="007-5" author="gooamoko">
		<comment>
			Добавим таблицу Вопросов для тестов
		</comment>
		<sql>
			CREATE TABLE questions(
			qst_pcode serial,
			qst_text text NOT NULL,
			qst_tstcode int NOT NULL,
			CONSTRAINT questions_tests_fk FOREIGN KEY(qst_tstcode) REFERENCES tests(tst_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT questions_pk PRIMARY KEY(qst_pcode));
		</sql>
	</changeSet>
	<changeSet id="007-6" author="gooamoko">
		<comment>
			Добавим таблицу ответов на вопросы
		</comment>
		<sql>
			CREATE TABLE answers(
			ans_pcode serial,
			ans_text varchar(255) NOT NULL,
			ans_right boolean NOT NULL DEFAULT false,
			ans_qstcode int NOT NULL,
			ans_tstcode int NOT NULL,
			CONSTRAINT answers_questions_fk FOREIGN KEY(ans_qstcode) REFERENCES questions(qst_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT answers_tests_fk FOREIGN KEY(ans_tstcode) REFERENCES tests(tst_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT answers_pk PRIMARY KEY(ans_pcode));
		</sql>
	</changeSet>
	<changeSet id="007-7" author="gooamoko">
		<comment>
			Добавим таблицу тестирований
		</comment>
		<sql>
			CREATE TABLE testsessions(
			tss_pcode serial,
			tss_timestamp timestamp NOT NULL DEFAULT now(),
			tss_psncode int NOT NULL,
			tss_tstcode int NOT NULL,
			tss_mark int NOT NULL DEFAULT 0,
			tss_questions int NOT NULL DEFAULT 0,
			tss_right int NOT NULL DEFAULT 0,
			CONSTRAINT testsessions_persons_fk FOREIGN KEY(tss_psncode) REFERENCES persons(psn_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT testsessions_tests_fk FOREIGN KEY(tss_tstcode) REFERENCES tests(tst_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT testsessions_pk PRIMARY KEY(tss_pcode));
		</sql>
	</changeSet>
	<changeSet id="007-8" author="gooamoko">
		<comment>
			Добавим таблицу тестирований
		</comment>
		<sql>
			CREATE TABLE testdetails(
			tdt_pcode serial,
			tdt_qstcode int NOT NULL,
			tdt_anscode int NOT NULL,
			CONSTRAINT testdetails_questions_fk FOREIGN KEY(tdt_qstcode) REFERENCES questions(qst_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT testdetails_answers_fk FOREIGN KEY(tdt_anscode) REFERENCES answers(ans_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT testdetails_pk PRIMARY KEY(tdt_pcode));
		</sql>
	</changeSet>
	<changeSet id="007-9" author="gooamoko">
		<comment>
			Добавим поле в таблицу тестирований
		</comment>
		<sql>
			ALTER TABLE testdetails ADD COLUMN tdt_tsscode int NOT NULL;
		</sql>
	</changeSet>
	<changeSet id="007-10" author="gooamoko">
		<comment>
			Добавим внешний ключ в таблицу тестирований
		</comment>
		<sql>
			ALTER TABLE testdetails ADD CONSTRAINT testdetails_testsessions_fk
			FOREIGN KEY(tdt_tsscode) REFERENCES testsessions(tss_pcode) ON UPDATE CASCADE ON DELETE CASCADE;
		</sql>
	</changeSet>
	<changeSet id="007-11" author="gooamoko">
		<comment>
			Создадим фукцию для вычисления количества связанных со специальностью сущностей
		</comment>
		<sql splitStatements="false" stripComments="false">
			<![CDATA[
            CREATE OR REPLACE FUNCTION getSpecialityWeight(integer) RETURNS bigint AS '
            SELECT (SELECT COUNT(*) FROM departmentprofiles WHERE (dpr_spccode = $1)) +
            (SELECT COUNT(*) FROM plans WHERE (pln_spccode = $1)) +
            (SELECT COUNT(*) FROM groups WHERE (grp_spccode = $1)) +
            (SELECT COUNT(*) FROM plans WHERE (pln_spccode = $1)) +
            (SELECT COUNT(*) FROM requests WHERE (req_spccode = $1)) +
            (SELECT COUNT(*) FROM seats WHERE (sea_spccode = $1));' LANGUAGE sql;
            ]]>
		</sql>
	</changeSet>
	<changeSet id="007-12" author="gooamoko">
		<comment>
			Функция для замены одной специальности на другую.
			Первый параметр в функции - источник (было)
			Второй параметр в функции - назначение (стало)
		</comment>
		<sql splitStatements="false" stripComments="false">
			<![CDATA[
            CREATE OR REPLACE FUNCTION replaceSpeciality(integer, integer) RETURNS void AS '
            UPDATE plans SET pln_spccode = $2 WHERE (pln_spccode = $1);
            UPDATE groups SET grp_spccode = $2 WHERE (grp_spccode = $1);
            UPDATE plans SET pln_spccode = $2 WHERE (pln_spccode = $1);
            DELETE FROM departmentprofiles WHERE (dpr_spccode = $1);
            DELETE FROM requests WHERE (req_spccode = $1);
            DELETE FROM seats WHERE (sea_spccode = $1);
            DELETE FROM specialities WHERE (spc_pcode = $1);' LANGUAGE sql;
            ]]>
		</sql>
	</changeSet>
	<changeSet id="007-13" author="gooamoko">
		<comment>
			Функция для замены одной специальности на другую. Теперь учитываем карточки.
			Первый параметр в функции - источник (было)
			Второй параметр в функции - назначение (стало)
		</comment>
		<sql splitStatements="false" stripComments="false">
			<![CDATA[
            CREATE OR REPLACE FUNCTION replaceSpeciality(integer, integer) RETURNS void AS '
            UPDATE plans SET pln_spccode = $2 WHERE (pln_spccode = $1);
            UPDATE groups SET grp_spccode = $2 WHERE (grp_spccode = $1);
            UPDATE cards SET crd_spccode = $2 WHERE (crd_spccode = $1);
            DELETE FROM departmentprofiles WHERE (dpr_spccode = $1);
            DELETE FROM requests WHERE (req_spccode = $1);
            DELETE FROM seats WHERE (sea_spccode = $1);
            DELETE FROM specialities WHERE (spc_pcode = $1);' LANGUAGE sql;
            ]]>
		</sql>
	</changeSet>
	<changeSet id="007-14" author="gooamoko">
		<comment>
			Создадим фукцию для вычисления количества связанных со специальностью сущностей (теперь считаем правильно)
		</comment>
		<sql splitStatements="false" stripComments="false">
			<![CDATA[
            CREATE OR REPLACE FUNCTION getSpecialityWeight(integer) RETURNS bigint AS '
            SELECT (SELECT COUNT(*) FROM departmentprofiles WHERE (dpr_spccode = $1)) +
            (SELECT COUNT(*) FROM cards WHERE (crd_spccode = $1)) +
            (SELECT COUNT(*) FROM groups WHERE (grp_spccode = $1)) +
            (SELECT COUNT(*) FROM plans WHERE (pln_spccode = $1)) +
            (SELECT COUNT(*) FROM requests WHERE (req_spccode = $1)) +
            (SELECT COUNT(*) FROM seats WHERE (sea_spccode = $1));' LANGUAGE sql;
            ]]>
		</sql>
	</changeSet>
	<changeSet id="007-15" author="gooamoko">
		<comment>
			Таблица для связи тестов со специальностями
		</comment>
		<sql splitStatements="false" stripComments="false">
			<![CDATA[
			CREATE TABLE testlists (
			tsl_pcode serial,
			tsl_tstcode int NOT NULL,
			tsl_spccode int NOT NULL,
			CONSTRAINT testlists_pk PRIMARY KEY(tsl_pcode),
			CONSTRAINT testlists_tests_fk FOREIGN KEY(tsl_tstcode) REFERENCES tests(tst_pcode) ON UPDATE CASCADE ON DELETE CASCADE,
			CONSTRAINT testlists_specialities_fk FOREIGN KEY(tsl_spccode) REFERENCES specialities(spc_pcode) ON UPDATE CASCADE ON DELETE CASCADE);
            ]]>
		</sql>
	</changeSet>

</databaseChangeLog>